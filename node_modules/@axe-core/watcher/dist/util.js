"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeManifest = exports.writeVariables = exports.HeadlessNotSupportedError = exports.extensionArgs = exports.PATH_TO_EXTENSION_VARIABLES = exports.PATH_TO_SESSION_FILE = exports.DEFAULT_SERVER_URL = exports.PATH_TO_EXTENSION = void 0;
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var os_1 = __importDefault(require("os"));
var git = __importStar(require("./git"));
var validateApiKey_1 = __importDefault(require("./validateApiKey"));
exports.PATH_TO_EXTENSION = path_1.default.join(__dirname, '..', 'extension');
exports.DEFAULT_SERVER_URL = 'https://axe.deque.com/';
exports.PATH_TO_SESSION_FILE = path_1.default.join(os_1.default.tmpdir(), 'axe-watcher-session.json');
exports.PATH_TO_EXTENSION_VARIABLES = path_1.default.join(exports.PATH_TO_EXTENSION, 'variables.json');
exports.extensionArgs = [
    "--disable-extensions-except=".concat(exports.PATH_TO_EXTENSION),
    "--load-extension=".concat(exports.PATH_TO_EXTENSION)
];
var HeadlessNotSupportedError = /** @class */ (function (_super) {
    __extends(HeadlessNotSupportedError, _super);
    function HeadlessNotSupportedError() {
        var _this = _super.call(this, 'Cannot use extension while headless.') || this;
        _this.name = 'HeadlessNotSupportedError';
        return _this;
    }
    return HeadlessNotSupportedError;
}(Error));
exports.HeadlessNotSupportedError = HeadlessNotSupportedError;
/** Write the user's settings to the disk, so the extension can load them. */
function writeVariables(_a) {
    var apiKey = _a.apiKey, serverURL = _a.serverURL, sessionId = _a.sessionId, autoAnalyze = _a.autoAnalyze, cypress = _a.cypress, takeScreenshots = _a.takeScreenshots, _b = _a.validateApiKey, shouldValidateApiKey = _b === void 0 ? true : _b;
    if (!serverURL) {
        serverURL = exports.DEFAULT_SERVER_URL;
    }
    var urlString;
    try {
        urlString = new URL(serverURL).toString();
    }
    catch (err) {
        throw new Error("Error when converting serverURL to URL. Ensure it is formatted properly: ".concat(err));
    }
    if (shouldValidateApiKey) {
        (0, validateApiKey_1.default)({ apiKey: apiKey, serverURL: urlString });
    }
    if (typeof autoAnalyze === 'undefined') {
        autoAnalyze = true;
    }
    // When a custom session ID is not provided, attempt to read it from the filesystem.
    // This enables multi-process/multi-browser test suites to all use the same session ID.
    if (!sessionId && fs_1.default.existsSync(exports.PATH_TO_SESSION_FILE)) {
        try {
            var data = JSON.parse(fs_1.default.readFileSync(exports.PATH_TO_SESSION_FILE, 'utf8'));
            sessionId = data.id;
        }
        catch (error) {
            throw new Error("Unable to read session configuration: ".concat(error));
        }
    }
    var variables = {
        api_key: apiKey,
        server_url: urlString,
        session_id: sessionId,
        take_screenshots: !!takeScreenshots,
        auto_analyze: !!autoAnalyze,
        cypress: !!cypress
    };
    // If the repository is a git repository, add git info to the variables.
    if (git.isRepository()) {
        variables.git_branch = git.getBranchName();
        variables.git_default_branch = git.getDefaultBranchName();
        var info = git.getCommitInfo();
        variables.git_commit_sha = info === null || info === void 0 ? void 0 : info.hash;
        variables.git_commit_author = info === null || info === void 0 ? void 0 : info.author;
        variables.git_commit_email = info === null || info === void 0 ? void 0 : info.email;
        variables.git_commit_message = info === null || info === void 0 ? void 0 : info.message;
        variables.git_url = git.getRemoteURL();
        variables.git_is_dirty = git.isDirty();
    }
    fs_1.default.writeFileSync(exports.PATH_TO_EXTENSION_VARIABLES, JSON.stringify(variables));
}
exports.writeVariables = writeVariables;
/** Update the extension manifest file. */
function writeManifest(_a) {
    var all_frames = _a.all_frames, exclude_globs = _a.exclude_globs;
    var manifestPath = path_1.default.join(exports.PATH_TO_EXTENSION, 'manifest.json');
    var manifest = JSON.parse(fs_1.default.readFileSync(manifestPath, 'utf-8'));
    manifest.content_scripts[0].all_frames = all_frames;
    manifest.content_scripts[0].exclude_globs = exclude_globs;
    fs_1.default.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2));
}
exports.writeManifest = writeManifest;
//# sourceMappingURL=util.js.map