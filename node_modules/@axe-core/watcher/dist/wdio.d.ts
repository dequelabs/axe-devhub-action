import type { Options } from '@wdio/types';
import type { Browser, BrowserCommandsType, ElementCommandsType, RemoteOptions } from 'webdriverio';
import { Configuration } from './util';
import Controller from './Controller';
declare type Options = RemoteOptions & Configuration;
/**
 * Creates a WebDriverIO config that uses axe extension
 *
 * @param arg Config to extend
 */
export declare function wdioConfig({ axe, ...options }: Options): RemoteOptions;
export declare function wdioTestRunner(axe: Configuration['axe'], config: Options.Testrunner): Options.Testrunner;
export declare class WdioController extends Controller {
    private driver;
    constructor(driver: Browser);
    protected executeScript(fn: string | (() => Promise<void>), ...args: unknown[]): Promise<void>;
}
/** Webdriver `browser` methods. */
export declare const WRAPPED_BROWSER_METHODS: ReadonlyArray<keyof BrowserCommandsType>;
/** Wrapped `element` methods. */
export declare const WRAPPED_ELEMENT_METHODS: ReadonlyArray<keyof ElementCommandsType>;
/** Wrap the given WDIO `browser` object, ensuring axe-core analysis is run after each command. */
export declare const wrapWdio: (browser: Browser, controller: WdioController) => Browser;
export {};
