# This workflow assumes that the following API keys exist and are defined as secrets:
#
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_NONE_ISSUE_IMPACT_NONE
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_NONE_ISSUE_IMPACT_MINOR
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_NONE_ISSUE_IMPACT_SERIOUS
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_SERIOUS_ISSUE_IMPACT_NONE
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_SERIOUS_ISSUE_IMPACT_MINOR
# - AXE_WATCHER_API_KEY_A11Y_THRESHOLD_SERIOUS_ISSUE_IMPACT_SERIOUS
#
# Each should be pre-configured with an a11y_threshold setting matching the secret name

name: Tests

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: ludeeus/action-shellcheck@2.0.0
  test-action:
    strategy:
      matrix:
        test-case: [
          { a11y_threshold: 'NONE', maximum_issue_impact: 'NONE', expected_outcome: 'success' },
          { a11y_threshold: 'NONE', maximum_issue_impact: 'MINOR', expected_outcome: 'failure' },
          { a11y_threshold: 'NONE', maximum_issue_impact: 'SERIOUS', expected_outcome: 'failure' },
          { a11y_threshold: 'SERIOUS', maximum_issue_impact: 'NONE', expected_outcome: 'success' },
          { a11y_threshold: 'SERIOUS', maximum_issue_impact: 'MINOR', expected_outcome: 'success' },
          { a11y_threshold: 'SERIOUS', maximum_issue_impact: 'SERIOUS', expected_outcome: 'failure' },
        ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Arrange the devhub state required for the test case
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: cd example && npm install
      - run: cd example && npm run build
      - name: Run tests
        run: xvfb-run --auto-servernum npm run ci
        working-directory: ./example
        env:
          CYPRESS_MAXIMUM_ISSUE_IMPACT: ${{ matrix.test-case.maximum_issue_impact }}
          API_KEY: ${{ secrets[format('AXE_WATCHER_API_KEY_A11Y_THRESHOLD_{0}_ISSUE_IMPACT_{1}', matrix.test-case.a11y_threshold, matrix.test-case.maximum_issue_impact)] }}
          SERVER_URL: https://axe.dequelabs.com

      # Invoke the action
      - id: "${{ format('run-action-{0}-{1}', matrix.test-case.a11y_threshold, matrix.test-case.maximum_issue_impact) }}"
        uses: ./
        continue-on-error: true
        with:
          API_KEY: ${{ secrets[format('AXE_WATCHER_API_KEY_A11Y_THRESHOLD_{0}_ISSUE_IMPACT_{1}', matrix.test-case.a11y_threshold, matrix.test-case.maximum_issue_impact)] }}
          server_url: https://axe.dequelabs.com

      # Verify it did what we expected
      - run: |
          if [[ "${{ matrix.test-case.expected_outcome }}" != "${{ format('steps.run-action-{0}-{1}.outcome', matrix.test-case.a11y_threshold, matrix.test-case.maximum_issue_impact) }}" ]]; then
            echo "Expected outcome '${{ matrix.test-case.expected_outcome }}' but got '${{ steps.run-action.outcome }}'"
            exit 1
          fi

